module.exports = {
  // React and JSX
  'class-methods-use-this': [
    'error',
    {
      exceptMethods: [
        'render',
        'getInitialState',
        'getDefaultProps',
        'getChildContext',
        'componentWillMount',
        'UNSAFE_componentWillMount',
        'componentDidMount',
        'componentWillReceiveProps',
        'UNSAFE_componentWillReceiveProps',
        'shouldComponentUpdate',
        'componentWillUpdate',
        'UNSAFE_componentWillUpdate',
        'componentDidUpdate',
        'componentWillUnmount',
        'componentDidCatch',
        'getSnapshotBeforeUpdate',
      ],
    },
  ],
  'jsx-quotes': ['error', 'prefer-double'],
  'react/boolean-prop-naming': [
    'warn',
    {
      propTypeNames: ['bool', 'mutuallyExclusiveTrueProps'],
      rule: '^(can|is|has|should)[A-Z]([A-Za-z0-9]?)+',
      message: 'must starts with "can", "is", "has" or "should"',
    },
  ],
  'react/jsx-boolean-value': ['error', 'never', {always: []}],
  'react/jsx-closing-bracket-location': ['error', 'line-aligned'],
  'react/jsx-closing-tag-location': 'error',
  'react/jsx-curly-spacing': ['error', 'never', {allowMultiline: true}],
  'react/jsx-equals-spacing': ['error', 'never'],
  'react/jsx-fragments': ['warn', 'syntax'],
  'react/jsx-indent-props': ['error', 2],
  'react/jsx-key': 'warn',
  'react/jsx-max-props-per-line': ['error', {maximum: 1, when: 'multiline'}],
  'react/jsx-props-no-multi-spaces': 'error',
  'react/jsx-tag-spacing': [
    'warn',
    {
      closingSlash: 'never',
      beforeSelfClosing: 'always',
      afterOpening: 'never',
      beforeClosing: 'never',
    },
  ],
  'react/jsx-uses-react': ['error'],
  'react/jsx-uses-vars': 'error',
  'react/no-access-state-in-setstate': 'error',
  'react/no-deprecated': 'error',
  'react/no-this-in-sfc': 'error',
  'react/no-unescaped-entities': 'error',
  'react/prefer-stateless-function': ['error', {ignorePureComponents: true}],
  'react/display-name': 0,
  'react/prop-types': 0,
};
